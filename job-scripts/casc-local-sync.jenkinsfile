pipeline {
    agent {
        kubernetes {
            yaml readTrusted('job-scripts/pod.yaml')
        }
    }

    options {
        timeout(time: 10, unit: 'MINUTES')
        skipDefaultCheckout()
    }
    stages {
        stage('Checkout Bundles') {
            steps {
                dir('bundles') {
                    checkout scm
                }
            }
        }
        stage('Checkout Audit') {
            when {
                expression {
                    env.JOB_NAME == 'casc-local-audit'
                }
            }
            steps {
                dir('audit') {
                    git branch: 'main', changelog: false, credentialsId: 'github-token-rw', poll: false, url: 'BUNDLEUTILS_AUDIT_REPO'
                }
            }
        }
        stage('Run Script') {
            environment {
                CASC_VALIDATION_LICENSE_KEY = credentials('casc-validation-key')
                CASC_VALIDATION_LICENSE_CERT = credentials('casc-validation-cert')
                GIT_COMMITTER_NAME = 'bundleutils-bot'
                GIT_COMMITTER_EMAIL = 'bundleutils-bot@example.org'
                GIT_AUTHOR_NAME = 'bundleutils-bot'
                GIT_AUTHOR_EMAIL = 'bundleutils-bot@example.org'
            }
            steps {
                withCredentials([
                    gitUsernamePassword(credentialsId: 'github-token-rw', gitToolName: 'Default'),
                    usernamePassword(credentialsId: 'bundleutils-creds', passwordVariable: 'BUNDLEUTILS_PASSWORD', usernameVariable: 'BUNDLEUTILS_USERNAME')]) {
                    dir('bundles') {
                        sh './job-scripts/casc-local-sync.sh'
                    }
                }
            }
        }
    }
}
